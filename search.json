[{"path":"https://lanl.github.io/NEONiso/articles/example_workflow.html","id":"neoniso-quickstart-an-example-workflow","dir":"Articles","previous_headings":"","what":"NEONiso quickstart: an example workflow","title":"Getting Started with NEONiso","text":"goal document help NEONiso users running local copy calibrated NEON atmospheric isotope data. Currently, NEONiso mature functions handling processing atmospheric CO2 isotope data, functions work water isotope data earlier development. Therefore, document focus use functions working atmospheric CO2 data. document cover three important steps working NEON isotope data: 1) retrieving data NEON API, 2) calibrating data, 3) running set diagnostic scripts inspect data.","code":""},{"path":"https://lanl.github.io/NEONiso/articles/example_workflow.html","id":"neon-data-retrieval","dir":"Articles","previous_headings":"NEONiso quickstart: an example workflow","what":"NEON Data Retrieval","title":"Getting Started with NEONiso","text":"Atmospheric isotope data products NEON included part eddy covariance bundled data product (ID DP4.00200.001). NEONiso includes function downloading managing local archive eddy covariance bundles: manage_local_EC_archive. example, following command download data ONAQ site: sites argument can also vector multiple sites ’d like request, “” pull data sites (note >100 GB growing February 2021). EC bundles gzipped remote server, function also unzip files ’ve downloaded.","code":"manage_local_EC_archive(file_dir = \"~/Desktop\",                         get = TRUE,                         unzip_files = TRUE,                         sites = \"ONAQ\")"},{"path":"https://lanl.github.io/NEONiso/articles/example_workflow.html","id":"data-calibration","dir":"Articles","previous_headings":"NEONiso quickstart: an example workflow","what":"Data calibration","title":"Getting Started with NEONiso","text":"Two methods available calibrate NEON Carbon isotope data take slightly different approaches: ) ‘Bowling_2003’ method calibrates 12CO2 13CO2 mole fractions independently, b) ‘linreg’ method calibrates d13C CO2 directly without converting isotopologue mole fractions. method specified argument calibrate_carbon_bymonth(). methods yield similar results, error precision estimates slightly better calibrate_carbon_Bowling2003() function (Fiorella et al., 2021; JGR-Biogeosciences) [https://doi.org/10.1029/2020JG005862]. simplest way interact functions place inside loop (apply statement), call file like calibrate: Two different methods calibrate available: ) ‘gain offset’ regression using 12CO2 13CO2 mole fractions (method = ‘Bowling_2003’, Bowling et al. 2003) b) ‘direct’ linear regression CO2 d13C values generate calibration transfer functions (method = ‘linreg’). function ‘calibrate_carbon_bymonth()’ assumes vectors : 1) input file names (fnames), 2) output file names (fnames.), 3) 4 letter NEON site codes corresponding entry input file names (fnames). example code generate three vectors provided :","code":"for (i in 1:length(fnames.out)) {   calibrate_carbon_bymonth(fnames[i],                            fnames.out[i],                            site=site.code[i],                            method = \"Bowling_2003\") } data.dir <- \"/your/path/here/DP4_00200_001/\"  fnames <- list.files(path = data.dir,                      pattern = \".h5\",                      recursive = TRUE,                      full.names = TRUE)  # unselect gz files. fnames <- fnames[!grepl(\".gz\", fnames)]  fname.byfolder <- strsplit(fnames, split=\".\", fixed = TRUE) site.code  <- sapply(fname.byfolder, '[[', 3)  # inspect site.code in the environment: is it a vector with repeated \"ONAQ\"? fnames.tmp <- gsub(\".h5\", \".calibrated.h5\", fnames) fnames.spt <- strsplit(fnames.tmp, split = \"/\") fnames.out <- sapply(fnames.spt, \"[[\", 7)  # create new output directory outpaths   <- paste0(your_path, \"/ONAQ/output/\") # apply function used here to generalize in case you wanted to run all sites sapply(unique(outpaths), dir.create, showWarnings=FALSE)  # update fnames.out to include desired output paths. fnames.out <- paste0(outpaths, \"/\", fnames.out)"},{"path":"https://lanl.github.io/NEONiso/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rich Fiorella. Author, maintainer.","code":""},{"path":"https://lanl.github.io/NEONiso/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fiorella, R. P., Good, S. P., Allen, S. T., Guo, J. S., Still, C. J., Noone, D. C., et al. (2021). Calibration Strategies Detecting Macroscale Patterns NEON Atmospheric Carbon Isotope Observations. Journal Geophysical Research: Biogeosciences, 126, e2020JG005862. https://doi.org/10.1029/2020JG005862","code":"@Article{,   title = {Calibration Strategies for Detecting Macroscale Patterns in NEON Atmospheric Carbon Isotope Observations},   author = {Richard P. Fiorella and Stephen P. Good and Scott T. Allen and Jessica S. Guo and Christopher J. Still and David C. Noone and William R. L. Anderegg and Christopher R. Florian and Hongyan Luo and Natchaya Pingintha-Durden and Gabriel J. Bowen},   journal = {Journal of Geophysical Research - Biogeosciences},   year = {2021},   url = {https://doi.org/10.1029/2020JG005862}, }"},{"path":"https://lanl.github.io/NEONiso/index.html","id":"neoniso","dir":"","previous_headings":"","what":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"Author: Rich Fiorella October 31, 2022. repository contains R package calibrate NEON atmospheric isotope data. stable version package can installed CRAN, development version package can installed using devtools (see ). Please report issues , bugs found, enhancement suggestions issues repository.","code":""},{"path":"https://lanl.github.io/NEONiso/index.html","id":"installing-the-development-version","dir":"","previous_headings":"","what":"Installing the development version:","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"need rhdf5 package, CRAN. rhdf5 available bioconductor using: Install devtools, available CRAN. Install NEONiso GitHub. Development version can installed using: Alternatively, can install specific version package (e.g., v0.1) specifying version tag:","code":"if (!requireNamespace(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"rhdf5\") devtools::install_github(\"lanl/NEONiso\") devtools::install_github(\"lanl/NEONiso@v0.1\")"},{"path":"https://lanl.github.io/NEONiso/index.html","id":"citation-information","dir":"","previous_headings":"","what":"Citation information:","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"Package functionality calibrate NEON carbon isotope data described paper JGR-Biogeosciences (doi: 10.1029/2020JG005862). Users package also cite Zenodo DOI . Please also check ensure compliant NEON’s data citation policy products derived package: https://www.neonscience.org/data/-data/data-policies","code":""},{"path":"https://lanl.github.io/NEONiso/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage:","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"Two methods available calibrate NEON Carbon isotope data take slightly different approaches: ) ‘Bowling_2003’ method calibrates 12CO2 13CO2 mole fractions independently, b) ‘linreg’ method calibrates d13C CO2 directly without converting isotopologue mole fractions. method specified argument calibrate_carbon_bymonth(). methods yield similar results, error precision estimates slightly better calibrate_carbon_Bowling2003() function (Fiorella et al., 2021; JGR-Biogeosciences) function meant applied list vector uncalibrated data files, produce output hdf5 files (currently) CO2 d13C variables instead entire data bundle. Development targeted tested monthly basic files, functions also work extended data files. neonUtilities:::stackEddy work output files - please file issue .","code":""},{"path":"https://lanl.github.io/NEONiso/index.html","id":"data-alert","dir":"","previous_headings":"","what":"DATA ALERT:","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"Several months data NEON data portal issue Picarro time clock diverged valve manifold time. fix developed, propagated NEON data portal.","code":""},{"path":"https://lanl.github.io/NEONiso/index.html","id":"copyright-notice","dir":"","previous_headings":"","what":"Copyright notice:","title":"Tools to Calibrate and Work with NEON Atmospheric Isotope Data","text":"© 2022. Triad National Security, LLC. rights reserved. program produced U.S. Government contract 89233218CNA000001 Los Alamos National Laboratory (LANL), operated Triad National Security, LLC U.S. Department Energy/National Nuclear Security Administration. rights program reserved Triad National Security, LLC, U.S. Department Energy/National Nuclear Security Administration. Government granted others acting behalf nonexclusive, paid-, irrevocable worldwide license material reproduce, prepare derivative works, distribute copies public, perform publicly display publicly, permit others .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/NEONiso.html","id":null,"dir":"Reference","previous_headings":"","what":"NEONiso: A package for calibrating NEON atmospheric isotope observations. — NEONiso","title":"NEONiso: A package for calibrating NEON atmospheric isotope observations. — NEONiso","text":"package provides functions retrieving, calibrating, generating diagnostic plots NEON atmospheric isotope data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"R_to_delta — R_to_delta","title":"R_to_delta — R_to_delta","text":"R_to_delta","code":""},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R_to_delta — R_to_delta","text":"","code":"R_to_delta(R_values, element)"},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R_to_delta — R_to_delta","text":"R_values vector isotope ratios (e.g., R values). element element return delta values - carbon, oxygen, hydrogen.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R_to_delta — R_to_delta","text":"Vector isotope ratios delta notation.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"R_to_delta — R_to_delta","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/R_to_delta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"R_to_delta — R_to_delta","text":"","code":"R_to_delta(R_values = 2005.20e-6, element = 'oxygen') # returns 0. #> [1] 0"},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate_12CO2 — calculate_12CO2","title":"calculate_12CO2 — calculate_12CO2","text":"calculate_12CO2","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate_12CO2 — calculate_12CO2","text":"","code":"calculate_12CO2(total_co2, delta13C, f = 0.00474)"},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate_12CO2 — calculate_12CO2","text":"total_co2 Vector CO2 mole fractions. delta13C Vector d13C values. f Fraction CO2 12CO2 13CO2. Assumed fixed 0.00474","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate_12CO2 — calculate_12CO2","text":"Vector 12CO2 mole fractions.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calculate_12CO2 — calculate_12CO2","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_12CO2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate_12CO2 — calculate_12CO2","text":"","code":"calculate_12CO2(total_co2 = 410, delta13C = -8.5) #> [1] 403.583"},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate_13CO2 — calculate_13CO2","title":"calculate_13CO2 — calculate_13CO2","text":"calculate_13CO2","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate_13CO2 — calculate_13CO2","text":"","code":"calculate_13CO2(total_co2, delta13C, f = 0.00474)"},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate_13CO2 — calculate_13CO2","text":"total_co2 Vector CO2 mole fractions. delta13C Vector d13C values. f Fraction CO2 12CO2 13CO2. Assumed fixed 0.00474","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate_13CO2 — calculate_13CO2","text":"Vector 13CO2 mole fractions.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calculate_13CO2 — calculate_13CO2","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calculate_13CO2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate_13CO2 — calculate_13CO2","text":"","code":"calculate_13CO2(total_co2 = 410, delta13C = -8.5) #> [1] 4.473586"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_Bowling2003.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","title":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","text":"calibrate_ambient_carbon_Bowling2003","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_Bowling2003.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","text":"","code":"calibrate_ambient_carbon_Bowling2003(   amb_data_list,   caldf,   site,   filter_data = TRUE,   force_to_end = TRUE,   force_to_beginning = TRUE,   gap_fill_parameters = FALSE,   r2_thres = 0.9 )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_Bowling2003.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","text":"amb_data_list List containing ambient d13C dataset. include variables 000_0x0_xxm. (character) caldf Calibration data frame containing gain offset values 12C 13C isotopologues. site Four-letter NEON code corresponding site processed. filter_data Apply median absolute deviation filter Brock 86 remove impulse spikes? Inherited calibrate_ambient_carbon_Bowling2003() force_to_end given month, calibrate ambient data later last calibration, using last calibration? (default true) force_to_beginning given month, calibrate ambient data first calibration, using first calibration? (default true) gap_fill_parameters function attempt 'gap-fill' across bad calibration carrying last known good calibration forward? Implementation fairly primitive currently, carries last known good calibration available forward rather interpolating, etc. Default FALSE. r2_thres Minimum r2 value calibration considered \"good\" applied ambient data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_Bowling2003.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","text":"Depends write_to_file argument. true, returns nothing environment; returns calibrated ambient observations output file. false, returns modified version amb_data_list include calibrated ambient data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_Bowling2003.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_ambient_carbon_Bowling2003 — calibrate_ambient_carbon_Bowling2003","text":"Rich Fiorella rfiorella@lanl.gov Function called calibrate_carbon_bymonth() apply gain offset parameters ambient datasets (000_0x0_09m 000_0x0_30m). function generally used independently, used coordination calibrate_carbon_bymonth().","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_linreg.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","title":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","text":"calibrate_ambient_carbon_linreg","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_linreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","text":"","code":"calibrate_ambient_carbon_linreg(   amb_data_list,   caldf,   outname,   site,   filter_data = TRUE,   force_to_end = TRUE,   force_to_beginning = TRUE,   gap_fill_parameters = FALSE,   r2_thres = 0.9 )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_linreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","text":"amb_data_list List containing ambient d13C dataset. include variables 000_0x0_xxm. (character) caldf Calibration data frame containing gain offset values 12C 13C isotopologues. outname Output variable name. Inherited calibrate_ambient_carbon_linreg site Four-letter NEON code corresponding site processed. filter_data Apply median absolute deviation filter Brock 86 remove impulse spikes? Inherited calibrate_ambient_carbon_linreg force_to_end given month, calibrate ambient data later last calibration, using last calibration? (default true) force_to_beginning given month, calibrate ambient data first calibration, using first calibration? (default true) gap_fill_parameters function attempt 'gap-fill' across bad calibration carrying last good calibration forward? Implementation fairly primitive currently, carries last known good calibration available forward rather interpolating, etc. Default FALSE. r2_thres Minimum r2 value calibration considered \"good\" applied ambient data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_linreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","text":"Nothing environment; returns calibrated ambient observations function orchestrating calibration (calibrate_carbon). function designed called , exported namespace.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_carbon_linreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_ambient_carbon_linreg — calibrate_ambient_carbon_linreg","text":"Rich Fiorella rfiorella@lanl.gov Function called calibrate_ambient_carbon_linreg apply gain offset parameters ambient datasets (000_0x0_09m 000_0x0_30m). function generally used independently, used calibrate_ambient_carbon_linreg.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_water_linreg.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","title":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","text":"calibrate_ambient_water_isotopes","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_water_linreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","text":"","code":"calibrate_ambient_water_linreg(   amb_data_list,   caldf,   outname,   site,   file,   filter_data,   force_to_end,   force_to_beginning,   r2_thres )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_water_linreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","text":"amb_data_list List containing ambient d18O/d2H datasets. include variables 000_0x0_xxm. (character) caldf Calibration data frame containing slope intercept values d18O d2H values. outname Output variable name. Inherited calibrate_ambient_water_linreg site Four-letter NEON code corresponding site processed. file Output file name. Inherited calibrate_ambient_water_linreg filter_data Apply median filter output ambient data? inherited. force_to_end given month, calibrate ambient data later last calibration, using last calibration? (default true) force_to_beginning given month, calibrate ambient data first calibration, using first calibration? (default true) r2_thres Minimum r2 value calibration considered \"good\" applied ambient data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_water_linreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","text":"Nothing environment; returns calibrated ambient observations output file. function designed called .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_ambient_water_linreg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_ambient_water_isotopes — calibrate_ambient_water_linreg","text":"Rich Fiorella rfiorella@lanl.gov Function called calibrate_ambient_water_linreg apply slope intercept parameters ambient datasets (000_0x0_09m 000_0x0_30m) correct VSMOW scale. function generally used independently, used calibrate_ambient_water_linreg. Note version CORRECTION HUMIDITY performed. Use caution.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_carbon — calibrate_carbon","title":"calibrate_carbon — calibrate_carbon","text":"function drives workflow reads NEON carbon isotope data atmospheric CO2, calibrates VPDB scale, (optionally) writes calibrated data new HDF5 file. Two different approaches possible: ) calibration 12CO2 13CO2 isotopologues independently, Bowling et al. 2003 (Agr. . Met.), b) direct calibration d13C CO2 values using linear regression. time results generated extremely similar . Wen et al. 2013 compared several different carbon isotope calibration techniques found superior method circumstances. also found case NEON data (Fiorella et al. 2021; JGR-Biogeosciences).","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_carbon — calibrate_carbon","text":"","code":"calibrate_carbon(   inname,   outname,   site,   method = \"Bowling_2003\",   calibration_half_width = 0.5,   force_cal_to_beginning = TRUE,   force_cal_to_end = TRUE,   gap_fill_parameters = FALSE,   filter_ambient = TRUE,   r2_thres = 0.95,   correct_refData = TRUE,   write_to_file = TRUE,   remove_known_bad_months = TRUE,   plot_regression_data = FALSE,   plot_directory = NULL )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_carbon — calibrate_carbon","text":"inname Input file(s) calibrated. single file given, output single file per site per month. list files corresponding timeseries given site provided, calibrate whole time series. outname Name output file. (character) site Four letter NEON site code site processed. (character) method using Bowling et al. 2003 method (\"Bowling_2003\") direct linear regression d13C CO2 mole fractions (\"linreg\")? calibration_half_width Determines period (days) reference data selected (period 2*calibration_half_width). force_cal_to_beginning Extend first calibration beginning file? (default true) force_cal_to_end Extend last calibration end file? (default true) gap_fill_parameters function attempt 'gap-fill' across bad calibration carrying last good calibration forward? Implementation fairly primitive currently, carries last known good calibration available forward rather interpolating, etc. Default FALSE. filter_ambient Apply median absolute deviation filter (Brock 86) remove impulse spikes output ambient data? (logical; default true) r2_thres Minimum r2 threshold \"acceptable\" calibration. Acts remove calibration periods measurement error makes relationship nonlinear. Default = 0.95 correct_refData NEON indicated instances reported d13C CO2 reference values wrong. set true, correct known incorrect values. argument (hopefully, eventually) go away NEON fixed reference database. Users warned prior removal argument. write_to_file Write calibrated ambient data file? (Mostly used testing) remove_known_bad_months site months known spectral issues isotope ratios likely unrecoverable. parameter allows removal files, allows remain archive. plot_regression_data Default false; useful diagnostics. plot_directory used plot_regression_data TRUE, specify write diagnostic plot regression data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_carbon — calibrate_carbon","text":"Returns nothing environment, creates new output HDF5 file containing calibrated carbon isotope values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calibrate_carbon — calibrate_carbon","text":"'linreg' method simply takes measured reference d13C CO2 values generates transfer function using lm(). gain--offset method, d13C CO2 values converted 12CO2 13CO2 mole fractions. Gain offset parameters calculated isotopologue independently, analogous regression slope intercepts, jointly correct CO2 concentration dependence place d13C values VPDB scale. gain offset parameters defined : $$G = (X_{2,ref}-X_{1,ref})/(X_{2,meas}-X_{1,meas})$$ $$O = X_{2,ref}- G X_{2,meas}$$ Calibrated ambient isotopologues given : $$X_{cal} = X_{meas} G + O$$ Measurements reference materials considered \"good\" following conditions met: Measured CO2 concentrations within 10 ppm known \"reference\" concentrations. Variance CO2 concentration standard peak < 5 ppm. Measured d13C value must within 5 per mil known \"reference\" d13C value. first two criteria intended filter periods clear issue gas delivery system (.e., nearly empty gas tank, problem valve manifold, etc.); third criterion adopted visual inspection data timeseries revealed often first standard measurement following instrument issue higher--expected error. criterion clips clearly poor values. Selection criteria become function argument, therefore customizable, future release. behavior function bit different depending supplied inname. single file provided, output monthly. However, list files corresponding site can also provided, single output file per site generated.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_carbon — calibrate_carbon","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calibrate_carbon — calibrate_carbon","text":"","code":"if (FALSE) fin <- system.file('extdata', 'NEON.D15.ONAQ.DP4.00200.001.nsae.2019-05.basic.20201020T211037Z.packed.h5',          package = 'NEONiso', mustWork = TRUE) calibrate_carbon_bymonth(inname = fin, outname = 'out.h5',          site = 'ONAQ', write_to_file = FALSE) #> Warning: `calibrate_carbon_bymonth()` was deprecated in NEONiso 0.6.0. #> ℹ Please use `calibrate_carbon()` instead. #> Error in eval(expr, envir, enclos): object 'fin' not found calibrate_carbon_bymonth(inname = fin, outname = 'out.h5',          site = 'ONAQ', method = 'linreg', write_to_file = FALSE) #> Error in eval(expr, envir, enclos): object 'fin' not found"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"function drives workflow reads NEON carbon isotope data atmospheric CO2, calibrates VPDB scale, (optionally) writes calibrated data new HDF5 file. Two different approaches possible: ) calibration 12CO2 13CO2 isotopologues separately, Bowling et al. 2003 (Agr. . Met.), b) direct calibration d13C CO2 values using linear regression. vast majority time results generated either method extremely similar . Wen et al. 2013 compared several different carbon isotope calibration techniques found superior method circumstances. also found case NEON data (Fiorella et al. 2021; JGR-Biogeosciences).","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"","code":"calibrate_carbon_bymonth(   inname,   outname,   site,   method = \"Bowling_2003\",   calibration_half_width = 0.5,   force_cal_to_beginning = TRUE,   force_cal_to_end = TRUE,   gap_fill_parameters = FALSE,   filter_ambient = TRUE,   r2_thres = 0.95,   correct_refData = TRUE,   write_to_file = TRUE )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"inname Name input file. (character) outname Name output file. (character) site Four letter NEON site code site processed. (character) method using Bowling et al. 2003 method (\"Bowling_2003\") direct linear regression d13C CO2 mole fractions (\"linreg\")? calibration_half_width Determines period (days) reference data selected (period 2*calibration_half_width). force_cal_to_beginning Extend first calibration beginning file? (default true) force_cal_to_end Extend last calibration end file? (default true) gap_fill_parameters function attempt 'gap-fill' across bad calibration carrying last known good calibration forward? Implementation fairly primitive currently, carries last known good calibration available forward rather interpolating, etc. Default FALSE. filter_ambient Apply median absolute deviation filter (Brock 86) remove impulse spikes output ambient data? (logical; default true) r2_thres Minimum r2 threshold \"acceptable\" calibration. Acts remove calibration periods measurement error makes relationship nonlinear. Default = 0.95 correct_refData NEON indicated instances reported d13C CO2 reference values wrong. set true, correct known incorrect values. argument (hopefully, eventually) go away NEON fixed reference database. Users warned prior removal argument. write_to_file Write calibrated ambient data file? (Mostly used testing)","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"Returns nothing environment, creates new output HDF5 file containing calibrated carbon isotope values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"'linreg' method simply takes measured reference d13C CO2 values generates transfer function using lm(). gain--offset method, d13C CO2 values converted 12CO2 13CO2 mole fractions. Gain offset parameters calculated isotopologue independently, analogous regression slope intercepts, jointly correct CO2 concentration dependence place d13C values VPDB scale. gain offset parameters defined : $$G = (X_{2,ref}-X_{1,ref})/(X_{2,meas}-X_{1,meas})$$ $$O = X_{2,ref}- G X_{2,meas}$$ Calibrated ambient isotopologues given : $$X_{cal} = X_{meas} G + O$$ Measurements reference materials considered \"good\" following conditions met: Measured CO2 concentrations within 10 ppm known \"reference\" concentrations. Variance CO2 concentration standard peak < 5 ppm. Measured d13C value must within 5 per mil known \"reference\" d13C value. first two criteria intended filter periods clear issue gas delivery system (.e., nearly empty gas tank, problem valve manifold, etc.); third criterion adopted visual inspection data timeseries revealed often first standard measurement following instrument issue higher--expected error. criterion clips clearly poor values. Selection criteria become function argument, therefore customizable, future release.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_bymonth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calibrate_carbon_bymonth — calibrate_carbon_bymonth","text":"","code":"if (FALSE) fin <- system.file('extdata', 'NEON.D15.ONAQ.DP4.00200.001.nsae.2019-05.basic.20201020T211037Z.packed.h5',          package = 'NEONiso', mustWork = TRUE) calibrate_carbon_bymonth(inname = fin, outname = 'out.h5',          site = 'ONAQ', write_to_file = FALSE) #> Error in eval(expr, envir, enclos): object 'fin' not found calibrate_carbon_bymonth(inname = fin, outname = 'out.h5',          site = 'ONAQ', method = 'linreg', write_to_file = FALSE) #> Error in eval(expr, envir, enclos): object 'fin' not found"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","title":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","text":"calibrate_carbon_reference_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","text":"","code":"calibrate_carbon_reference_data(inname, outname, standard, site, calDf)"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","text":"inname Input file name. outname Output file name. standard standard working ? Must \"Low\", \"Med\", \"High\" site NEON 4-letter site code. calDf Calibration data frame - output fit_carbon_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","text":"Nothing environment.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_carbon_reference_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_carbon_reference_data — calibrate_carbon_reference_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_carbon.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_standards_carbon — calibrate_standards_carbon","title":"calibrate_standards_carbon — calibrate_standards_carbon","text":"calibrate_standards_carbon","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_carbon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_standards_carbon — calibrate_standards_carbon","text":"","code":"calibrate_standards_carbon(   cal_df,   ref_df,   f = 0.00474,   r2_thres = 0.95,   correct_bad_refvals = FALSE,   site,   refGas )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_carbon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_standards_carbon — calibrate_standards_carbon","text":"cal_df Data.frame containing calibration parameters ref_df Data.frame containing reference gas measurements f Fraction CO2 isotopologues 12CO2 13CO2. Inherited script calling function. r2_thres Threshold calibration regression used calibrate standards data. Default 0.95. Calibrated reference gas measurements occurring calibration periods r2 values less r2_thres marked NA. correct_bad_refvals correct known/suspected incorrect reference values NEON HDF5 files? (Default = FALSE). site Four letter NEON site code. used correct_bad_refvals = TRUE. refGas One \"low\", \"med\", \"high.\" used correct_bad_refvals = TRUE.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_carbon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_standards_carbon — calibrate_standards_carbon","text":"data.frame number rows cal_df, additional columns added calibrated CO2 mole fractions d13C values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_carbon.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_standards_carbon — calibrate_standards_carbon","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_water.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_standards_water — calibrate_standards_water","title":"calibrate_standards_water — calibrate_standards_water","text":"calibrate_standards_water","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_standards_water — calibrate_standards_water","text":"","code":"calibrate_standards_water(cal_df, ref_df, r2_thres = 0.95)"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_standards_water — calibrate_standards_water","text":"cal_df Data.frame containing calibration parameters ref_df Data.frame containing reference gas measurements r2_thres Threshold calibration regression used calibrate standards data. Default 0.95. Calibrated reference gas measurements occurring calibration periods r2 values less r2_thres marked NA.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_standards_water.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_standards_water — calibrate_standards_water","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_water — calibrate_water","title":"calibrate_water — calibrate_water","text":"function uses NEON validation data apply drift corrections measured ambient water isotope ratios. brief, ambient water isotope ratios calibrated generating regressions using reference water measurements bracketing ambient period. Three reference waters measured per day, several injections per reference water. Due memory effects, last three used currently generate calibration equations. Regressions measured d18O d2H values NEON-provisioned known reference values generated, used calibrate period ambient measurements r2 regression greater threshold value (default, 0.95). function deals selecting appropriate calibration data determining calibration quality. function also contains wrapper calibrate_ambient_water_linreg, calibrates ambient water data using calibration parameters generated function. function also copies data qfqm ucrt hdf5 data groups.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_water — calibrate_water","text":"","code":"calibrate_water(   inpath,   outpath,   site,   calibration_half_width = 14,   filter_data = TRUE,   force_cal_to_beginning = FALSE,   force_cal_to_end = FALSE,   r2_thres = 0.95,   slope_tolerance = 9999 )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_water — calibrate_water","text":"inpath Directory path input (monthly) NEON HDF5 files. outpath Directory path save output data file. (now, 1 per site). site Four-letter NEON code site processed. calibration_half_width Determines range standard measurements use determining calibration regression dataset. Creates moving window 2*calibration_half_width days wide. Default set 14 28 day moving window. filter_data Apply median absolute deviation filter Brock 86 remove impulse spikes? force_cal_to_beginning Extend first calibration beginning file? force_cal_to_end Extend last calibration end file? r2_thres Minimum r2 threshold \"acceptable\" calibration. Acts remove calibration periods measurement error makes relationship nonlinear. Default = 0.95 slope_tolerance different 1 allow 'passing' regression slopes ? Experimental parameter, default (e.g., default slope parameter = 9999)","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_water — calibrate_water","text":"nothing workspace, creates new output file calibrated water isotope data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calibrate_water — calibrate_water","text":"IMPORTANT NOTE Currently function apply correction humidity dependence Picarro isotopic measurements. data implement corrections yet publicly available. Caution suggested analyzing data low humidities, ~5000 ppm, likely higher biases lower humidity values. Additionally, please note function meant work files given site time. flexible version can handle files monthly files added future release.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_water — calibrate_water","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_water_linreg — calibrate_water_linreg_bymonth","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"function uses NEON validation data apply drift corrections measured ambient water isotope ratios. brief, ambient water isotope ratios calibrated generating regressions using reference water measurements bracketing ambient period. Three reference waters measured per day, several injections per reference water. Due memory effects, last three used currently generate calibration equations. Regressions measured d18O d2H values NEON-provisioned known reference values generated, used calibrate period ambient measurements r2 regression greater threshold value (default, 0.95). function deals selecting appropriate calibration data determining calibration quality. function also contains wrapper calibrate_ambient_water_linreg, calibrates ambient water data using calibration parameters generated function. function also copies data qfqm ucrt hdf5 data groups.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"","code":"calibrate_water_linreg_bymonth(   inname,   outname,   site,   time_diff_betweeen_standards = 1800,   filter_data = TRUE,   force_cal_to_beginning = TRUE,   force_cal_to_end = TRUE,   r2_thres = 0.95 )"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"inname Name input file. outname Name output file. site Four-letter NEON code site processed. time_diff_betweeen_standards Time (seconds) required consecutive standard measurements. filter_data Apply median absolute deviation filter Brock 86 remove impulse spikes? force_cal_to_beginning Extend first calibration beginning file? force_cal_to_end Extend last calibration end file? r2_thres Minimum r2 threshold \"acceptable\" calibration. Acts remove calibration periods measurement error makes relationship nonlinear. Default = 0.95","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"nothing workspace, creates new output file calibrated carbon isotope data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"IMPORTANT NOTE Currently function apply correction humidity dependence Picarro isotopic measurements. data implement corrections yet publicly available. Caution suggested analyzing data low humidities, ~5000 ppm, likely higher biases lower humidity values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_linreg_bymonth.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"calibrate_water_linreg — calibrate_water_linreg_bymonth","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"calibrate_water_reference_data — calibrate_water_reference_data","title":"calibrate_water_reference_data — calibrate_water_reference_data","text":"calibrate_water_reference_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calibrate_water_reference_data — calibrate_water_reference_data","text":"","code":"calibrate_water_reference_data(outname, standard, site, stdDf, calDf)"},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calibrate_water_reference_data — calibrate_water_reference_data","text":"outname Output file name. standard reference material 'calibrated'? (Low, med, high) site NEON 4-letter site code. stdDf Data frame reference material measurements. calDf Calibration data frame - output fit_water_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/calibrate_water_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calibrate_water_reference_data — calibrate_water_reference_data","text":"Nothing environment.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/carbon_regression_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"carbon_regression_plots — carbon_regression_plots","title":"carbon_regression_plots — carbon_regression_plots","text":"carbon_regression_plots","code":""},{"path":"https://lanl.github.io/NEONiso/reference/carbon_regression_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"carbon_regression_plots — carbon_regression_plots","text":"","code":"carbon_regression_plots(caldata, plot_filename, method, mtitle)"},{"path":"https://lanl.github.io/NEONiso/reference/carbon_regression_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"carbon_regression_plots — carbon_regression_plots","text":"caldata Data frame corresponding specific calibration period. plot_filename output file name diagnostic plot ? method method using? Currently works gain/offset. mtitle Fed routine - plot title ?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/carbon_regression_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"carbon_regression_plots — carbon_regression_plots","text":"Nothing environment, pdf plot file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/carbon_regression_plots.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"carbon_regression_plots — carbon_regression_plots","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":null,"dir":"Reference","previous_headings":"","what":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"convert_NEONhdf5_to_POSIXct_time","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"","code":"convert_NEONhdf5_to_POSIXct_time(intime)"},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"intime Vector datetimes NEON data files (string) convert POSIXct class","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"Vector datetimes NEON data file now POSIXct format.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_NEONhdf5_to_POSIXct_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert_NEONhdf5_to_POSIXct_time — convert_NEONhdf5_to_POSIXct_time","text":"","code":"convert_NEONhdf5_to_POSIXct_time(\"2019-06-01T12:00:00.000Z\") #> [1] \"2019-06-01 12:00:00 GMT\""},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":null,"dir":"Reference","previous_headings":"","what":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"Converts POSIXct object back character format used NEON HDF eddy covariance files. Output format,  using strptime syntax,  %Y-%m-%dT%H:%M:%OSZ.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"","code":"convert_POSIXct_to_NEONhdf5_time(intime)"},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"intime POSIXct vector convert NEON time format.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"Returns character version POSIXct object matching NEON time variable format.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/convert_POSIXct_to_NEONhdf5_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert_POSIXct_to_NEONhdf5_time — convert_POSIXct_to_NEONhdf5_time","text":"","code":"convert_POSIXct_to_NEONhdf5_time(Sys.time()) #> [1] \"2023-07-28T21:42:57.000Z\""},{"path":"https://lanl.github.io/NEONiso/reference/copy_qfqm_group.html","id":null,"dir":"Reference","previous_headings":"","what":"copy_qfqm_group — copy_qfqm_group","title":"copy_qfqm_group — copy_qfqm_group","text":"copy_qfqm_group","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_qfqm_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"copy_qfqm_group — copy_qfqm_group","text":"","code":"copy_qfqm_group(data_list, outname, site, file, species)"},{"path":"https://lanl.github.io/NEONiso/reference/copy_qfqm_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"copy_qfqm_group — copy_qfqm_group","text":"data_list List groups retrieve qfqm data . outname Output filename. site Four-letter NEON site code. file Input filename. species CO2 H2O? function used CO2 H2O isotopes.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_qfqm_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"copy_qfqm_group — copy_qfqm_group","text":"Nothing workspace, copies qfqm group input file output file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_qfqm_group.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"copy_qfqm_group — copy_qfqm_group","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_ucrt_group.html","id":null,"dir":"Reference","previous_headings":"","what":"copy_ucrt_group — copy_ucrt_group","title":"copy_ucrt_group — copy_ucrt_group","text":"copy_ucrt_group","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_ucrt_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"copy_ucrt_group — copy_ucrt_group","text":"","code":"copy_ucrt_group(data_list, outname, site, file, species)"},{"path":"https://lanl.github.io/NEONiso/reference/copy_ucrt_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"copy_ucrt_group — copy_ucrt_group","text":"data_list List groups retrieve ucrt data . outname Output file name. site NEON 4-letter site code. file Input file name. species H2O CO2.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_ucrt_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"copy_ucrt_group — copy_ucrt_group","text":"Nothing workspace, copies ucrt group input file output file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/copy_ucrt_group.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"copy_ucrt_group — copy_ucrt_group","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":null,"dir":"Reference","previous_headings":"","what":"correct_carbon_ref_cval — correct_carbon_ref_cval","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"ugly function present necessity, exist long necessary. internal correction within NEONiso calibration routines required mismatches 'true' isotope reference values NEON HDF5 files. NEON working correcting , corrected, function need exist immediately deprecated. result, function fairly messy little incentive improve .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"","code":"correct_carbon_ref_cval(   std_frame,   site,   omit_already_corrected = TRUE,   co2_tol = 5,   d13c_tol = 0.25 )"},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"std_frame Standard data frame perform swap . site NEON four letter site code. omit_already_corrected attempt correction, already corrected raw files. co2_tol Tolerance use select co2 values need replaced, ppm. Default = 5 ppm. d13c_tol Tolerance use select d13C values need replaced, ppm. Default = 0.25 per mil.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"data.frame, based std_frame, NEON-supplied reference values corrected mismatch previously identified.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"Current sites time periods affected:","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_cval.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"correct_carbon_ref_cval — correct_carbon_ref_cval","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Correct carbon ref output — correct_carbon_ref_output","title":"Correct carbon ref output — correct_carbon_ref_output","text":"Correct carbon ref output","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Correct carbon ref output — correct_carbon_ref_output","text":"","code":"correct_carbon_ref_output(   std_list,   site,   omit_already_corrected = TRUE,   co2_tol = 5,   d13c_tol = 0.25,   refGas )"},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Correct carbon ref output — correct_carbon_ref_output","text":"std_list List containing reference/validation gas measurements. site Four-letter NEON site code. omit_already_corrected Skip correction reference gas values already corrected files (default TRUE) older versions files, may want set FALSE. co2_tol Tolerance used identify mismatch CO2 values. correct measured CO2 values within +/- co2_tol within time period identified incorrect reference values. d13c_tol Tolerance used identify mismatch d13C values. correct measured d13C values within +/- d13c_tol within time period identified incorrect reference values. refGas reference gas corrected? Expects \"co2High\", \"co2Med\", \"co2Low\"","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Correct carbon ref output — correct_carbon_ref_output","text":"version std_list corrected reference values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/correct_carbon_ref_output.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Correct carbon ref output — correct_carbon_ref_output","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":null,"dir":"Reference","previous_headings":"","what":"delta_to_R — delta_to_R","title":"delta_to_R — delta_to_R","text":"delta_to_R","code":""},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"delta_to_R — delta_to_R","text":"","code":"delta_to_R(delta_values, element)"},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"delta_to_R — delta_to_R","text":"delta_values vector isotope ratios delta notation. element element return R values - carbon, oxygen, hydrogen.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"delta_to_R — delta_to_R","text":"Vector isotope ratios (R values).","code":""},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"delta_to_R — delta_to_R","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/delta_to_R.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"delta_to_R — delta_to_R","text":"","code":"delta_to_R(delta_values = 0, element = 'oxygen') # 2005.2e-6 for VSMOW. #> [1] 0.0020052"},{"path":"https://lanl.github.io/NEONiso/reference/estimate_calibration_error.html","id":null,"dir":"Reference","previous_headings":"","what":"estimate_calibration_error — estimate_calibration_error","title":"estimate_calibration_error — estimate_calibration_error","text":"estimate_calibration_error","code":""},{"path":"https://lanl.github.io/NEONiso/reference/estimate_calibration_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"estimate_calibration_error — estimate_calibration_error","text":"","code":"estimate_calibration_error(formula, data)"},{"path":"https://lanl.github.io/NEONiso/reference/estimate_calibration_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"estimate_calibration_error — estimate_calibration_error","text":"formula Formula pass caret::train perform cross validation. data Data frame perform cross-validation .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/estimate_calibration_error.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"estimate_calibration_error — estimate_calibration_error","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_carbon_calibration_data.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","title":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","text":"extract_carbon_calibration_data.R","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_carbon_calibration_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","text":"","code":"extract_carbon_calibration_data(data_list)"},{"path":"https://lanl.github.io/NEONiso/reference/extract_carbon_calibration_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","text":"data_list List containing data, /*/dp01/data/ group NEON HDF5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_carbon_calibration_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","text":"Returns data frame required variables.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_carbon_calibration_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_carbon_calibration_data.R — extract_carbon_calibration_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_water_calibration_data.html","id":null,"dir":"Reference","previous_headings":"","what":"extract_water_calibration_data — extract_water_calibration_data","title":"extract_water_calibration_data — extract_water_calibration_data","text":"extract_water_calibration_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_water_calibration_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract_water_calibration_data — extract_water_calibration_data","text":"","code":"extract_water_calibration_data(   data_list,   ucrt_list = NULL,   standard,   ucrt_source = \"data\",   method = \"by_site\" )"},{"path":"https://lanl.github.io/NEONiso/reference/extract_water_calibration_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract_water_calibration_data — extract_water_calibration_data","text":"data_list List containing data, /*/dp01/data/ group NEON HDF5 file. ucrt_list List containing uncertainty data, /*/dp01/ucrt/ group NEON HDF5 file. (works paired ucrt_source = 'ucrt' method = 'by_month') standard String indicating whether grab data high, medium, low standard. ucrt_source HDF5 file  variance extracted ? (\"data\" works now...\"ucrt\" throw error.) method calling function calibrate_water_linreg function (use \"by_month\") calibrate_water_linreg_bysite function (use \"by_site)","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_water_calibration_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract_water_calibration_data — extract_water_calibration_data","text":"Returns data frame required variables.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/extract_water_calibration_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"extract_water_calibration_data — extract_water_calibration_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/filter_median_Brock86.html","id":null,"dir":"Reference","previous_headings":"","what":"filter_median_Brock86 — filter_median_brock86","title":"filter_median_Brock86 — filter_median_brock86","text":"Median absolute deviation filter Brock 1986.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/filter_median_Brock86.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter_median_Brock86 — filter_median_brock86","text":"","code":"filter_median_brock86(data, width = 7, threshold = 5)"},{"path":"https://lanl.github.io/NEONiso/reference/filter_median_Brock86.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter_median_Brock86 — filter_median_brock86","text":"data Vector filter. width Width filter, rows. threshold filter values abs(threshold) away median","code":""},{"path":"https://lanl.github.io/NEONiso/reference/filter_median_Brock86.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter_median_Brock86 — filter_median_brock86","text":"Returns filtered vector.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/filter_median_Brock86.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"filter_median_Brock86 — filter_median_brock86","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_carbon_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_carbon_regression — fit_carbon_regression","title":"fit_carbon_regression — fit_carbon_regression","text":"fit_carbon_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_carbon_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_carbon_regression — fit_carbon_regression","text":"","code":"fit_carbon_regression(   ref_data,   method,   calibration_half_width,   plot_regression_data = FALSE,   plot_dir = \"/dev/null\",   site )"},{"path":"https://lanl.github.io/NEONiso/reference/fit_carbon_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_carbon_regression — fit_carbon_regression","text":"ref_data Reference data.frame estimate calibration parameters. method using Bowling et al. 2003 method (\"Bowling_2003\") direct linear regression d13C CO2 mole fractions (\"linreg\")? calibration_half_width Determines period (days) reference data selected (period 2*calibration_half_width). plot_regression_data True false - plot data used regression? Useful debugging. plot_dir plot_regression_data true, plots saved? site Needed regression plots.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_carbon_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_carbon_regression — fit_carbon_regression","text":"Returns data.frame calibration parameters. method == \"Bowling_2003\", data.frame includes gain offset parameters 12CO2 13CO2, r^2 values regression. method == \"linreg\", data.frame includes slope, intercept, r^2 values d13C CO2 values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_carbon_regression.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fit_carbon_regression — fit_carbon_regression","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_water_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_water_regression — fit_water_regression","title":"fit_water_regression — fit_water_regression","text":"fit_water_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_water_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_water_regression — fit_water_regression","text":"","code":"fit_water_regression(stds, calibration_half_width, slope_tolerance, r2_thres)"},{"path":"https://lanl.github.io/NEONiso/reference/fit_water_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_water_regression — fit_water_regression","text":"stds Reference data.frame estimate calibration parameters. calibration_half_width Determines period (days) reference data selected (period 2*calibration_half_width). slope_tolerance Allows filtering slopes deviate 1 slope_tolerance. r2_thres minimum r2 value permitted 'useful' calibration relationship.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/fit_water_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_water_regression — fit_water_regression","text":"Returns data.frame calibration parameters. Output data.frame includes slope, intercept, r^2 values d13C CO2 values.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":null,"dir":"Reference","previous_headings":"","what":"get_Rstd — get_Rstd","title":"get_Rstd — get_Rstd","text":"get_Rstd","code":""},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_Rstd — get_Rstd","text":"","code":"get_Rstd(element)"},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_Rstd — get_Rstd","text":"element element return standard ratio - carbon, oxygen, hydrogen.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_Rstd — get_Rstd","text":"Heavy--light isotope ratio common stable isotope standard. VSMOW water, VPDB carbon.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"get_Rstd — get_Rstd","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/get_Rstd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get_Rstd — get_Rstd","text":"","code":"get_Rstd(\"carbon\") # returns 0.0111797 #> [1] 0.0111797 get_Rstd(\"oxygen\") # returns 2005.20e-6 #> [1] 0.0020052"},{"path":"https://lanl.github.io/NEONiso/reference/ingest_data.html","id":null,"dir":"Reference","previous_headings":"","what":"ingest_data — ingest_data","title":"ingest_data — ingest_data","text":"ingest_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/ingest_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ingest_data — ingest_data","text":"","code":"ingest_data(inname, analyte, name_fix = TRUE)"},{"path":"https://lanl.github.io/NEONiso/reference/ingest_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ingest_data — ingest_data","text":"inname file (list files) extract data calibration. analyte Carbon (Co2) water (H2o)? name_fix Fix data frame required next-generation calibration functions, breaks old 'by_month()' functions. parameter provides necessary work around functions removed.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/ingest_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ingest_data — ingest_data","text":"List data frames, taken files specified inname","code":""},{"path":"https://lanl.github.io/NEONiso/reference/ingest_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ingest_data — ingest_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/loocv.html","id":null,"dir":"Reference","previous_headings":"","what":"loocv — loocv","title":"loocv — loocv","text":"loocv","code":""},{"path":"https://lanl.github.io/NEONiso/reference/loocv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"loocv — loocv","text":"","code":"loocv(mod)"},{"path":"https://lanl.github.io/NEONiso/reference/loocv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"loocv — loocv","text":"mod Fitted model estimate leave-one-CV .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/loocv.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"loocv — loocv","text":"Rich Fiorella rfiorella@lanl.gov helper function leave-one-cross variance","code":""},{"path":"https://lanl.github.io/NEONiso/reference/manage_local_EC_archive.html","id":null,"dir":"Reference","previous_headings":"","what":"manage_local_EC_archive — manage_local_EC_archive","title":"manage_local_EC_archive — manage_local_EC_archive","text":"Utility function help retrieve new EC data /prune duplicates, NEON provisions new data re-provisions data existing site month.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/manage_local_EC_archive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"manage_local_EC_archive — manage_local_EC_archive","text":"","code":"manage_local_EC_archive(   file_dir,   get = TRUE,   unzip_files = TRUE,   trim = FALSE,   dry_run = TRUE,   sites = \"all\" )"},{"path":"https://lanl.github.io/NEONiso/reference/manage_local_EC_archive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"manage_local_EC_archive — manage_local_EC_archive","text":"file_dir Specify root directory local EC store kept. get Pull data NEON API exist locally? unzip_files NEON gzips hdf5 files, unzip gzipped files within file_dir? (Searches recursively) trim Search local holdings, remove older file duplicates? dry_run List files identified duplicates, actually delete ? Default true prevent unintended data loss. sites sites retrieve data ? Default sites available data, can specify single site vector .","code":""},{"path":"https://lanl.github.io/NEONiso/reference/manage_local_EC_archive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"manage_local_EC_archive — manage_local_EC_archive","text":"Returns nothing environment, download new NEON HDF5 files selected sites (get = TRUE), unzip local file directory (unzip_files = TRUE), identify remove suspected duplicate files (trim = TRUE dry_run = FALSE).","code":""},{"path":"https://lanl.github.io/NEONiso/reference/manage_local_EC_archive.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"manage_local_EC_archive — manage_local_EC_archive","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"restructure_ambient_data — restructure_ambient_data","title":"restructure_ambient_data — restructure_ambient_data","text":"restructure_ambient_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restructure_ambient_data — restructure_ambient_data","text":"","code":"restructure_ambient_data(inpath, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restructure_ambient_data — restructure_ambient_data","text":"inpath Folder containing data stack. analyte Carbon (Co2) water (H2o)?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restructure_ambient_data — restructure_ambient_data","text":"List data extracted files listed inpath.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data2.html","id":null,"dir":"Reference","previous_headings":"","what":"restructure_ambient_data2 — restructure_ambient_data2","title":"restructure_ambient_data2 — restructure_ambient_data2","text":"restructure_ambient_data2","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restructure_ambient_data2 — restructure_ambient_data2","text":"","code":"restructure_ambient_data2(inpath, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restructure_ambient_data2 — restructure_ambient_data2","text":"inpath Folder containing data stack. analyte Carbon (Co2) water (H2o)?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_ambient_data2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restructure_ambient_data2 — restructure_ambient_data2","text":"List data extracted files listed inpath.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_carbon_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"restructure_carbon_variables — restructure_carbon_variables","title":"restructure_carbon_variables — restructure_carbon_variables","text":"restructure_carbon_variables","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_carbon_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restructure_carbon_variables — restructure_carbon_variables","text":"","code":"restructure_carbon_variables(dataframe, varname, mode, group)"},{"path":"https://lanl.github.io/NEONiso/reference/restructure_carbon_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restructure_carbon_variables — restructure_carbon_variables","text":"dataframe Input data.frame, neonUtilities::stackEddy varname variable applying function ? list ~10 common ones write hdf5 file. mode fixing reference data frame ambient data frame? group Data, ucrt, qfqm?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_carbon_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restructure_carbon_variables — restructure_carbon_variables","text":"data.frame formatted output hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_water_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"restructure_water_variables — restructure_water_variables","title":"restructure_water_variables — restructure_water_variables","text":"restructure_water_variables","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_water_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"restructure_water_variables — restructure_water_variables","text":"","code":"restructure_water_variables(dataframe, varname, mode)"},{"path":"https://lanl.github.io/NEONiso/reference/restructure_water_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"restructure_water_variables — restructure_water_variables","text":"dataframe Input data.frame, neonUtilities::stackEddy varname variable applying function ? list ~10 common ones write hdf5 file. mode fixing reference data frame ambient data frame?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/restructure_water_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"restructure_water_variables — restructure_water_variables","text":"data.frame formatted output hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/select_daily_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"select_daily_reference_data — select_daily_reference_data","title":"select_daily_reference_data — select_daily_reference_data","text":"select_daily_reference_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/select_daily_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select_daily_reference_data — select_daily_reference_data","text":"","code":"select_daily_reference_data(standard_df, analyte, min_nobs = NA)"},{"path":"https://lanl.github.io/NEONiso/reference/select_daily_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select_daily_reference_data — select_daily_reference_data","text":"standard_df Input reference data.frame. analyte calibrating CO2 H2O? (Use argument 'co2' 'h2o', else function throw error) min_nobs Minimum number high-frequency observations define peak. supplied, defaults 200 analyte = 'co2' 30 analyte = 'h2o'","code":""},{"path":"https://lanl.github.io/NEONiso/reference/select_daily_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select_daily_reference_data — select_daily_reference_data","text":"Smaller data.frame reference data selected use calibration routines returned. Assumes calibrating daily basis, longer time scale. Data selected based two criteria: missing, must least certain number high-frequency observations order qualify valid measurement. water system, function also keeps last three injections reference water per day.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/setup_output_file.html","id":null,"dir":"Reference","previous_headings":"","what":"setup_output_file — setup_output_file","title":"setup_output_file — setup_output_file","text":"Creates skeleton hdf5 file calibrated data.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/setup_output_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"setup_output_file — setup_output_file","text":"","code":"setup_output_file(inname, outname, site, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/setup_output_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"setup_output_file — setup_output_file","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. analyte Carbon ('Co2') water ('H2o') system?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/setup_output_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"setup_output_file — setup_output_file","text":"Nothing environment, creates new data file basic output HDF5 structure consistent NEON's data files.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/setup_output_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"setup_output_file — setup_output_file","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/swap_standard_isotoperatios.html","id":null,"dir":"Reference","previous_headings":"","what":"swap_standard_isotoperatios — swap_standard_isotoperatios","title":"swap_standard_isotoperatios — swap_standard_isotoperatios","text":"suspected instances water isotope ratios oxygen hydrogen flipped reference data. function corrects corrected NEON database using d-excess filter.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/swap_standard_isotoperatios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"swap_standard_isotoperatios — swap_standard_isotoperatios","text":"","code":"swap_standard_isotoperatios(std_frame, dxs_thres = 500)"},{"path":"https://lanl.github.io/NEONiso/reference/swap_standard_isotoperatios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"swap_standard_isotoperatios — swap_standard_isotoperatios","text":"std_frame Standard data frame perform swap . dxs_thres d-excess threshold indicate swap.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/swap_standard_isotoperatios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"swap_standard_isotoperatios — swap_standard_isotoperatios","text":"data.frame based std_frame, d18O d2H values swapped NEON input files determined reference value mismatch. Mismatch determined based d-excess standard (= d2H - 8*d18O), using value 500 default.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/swap_standard_isotoperatios.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"swap_standard_isotoperatios — swap_standard_isotoperatios","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_core_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"terrestrial_core_sites — terrestrial_core_sites","title":"terrestrial_core_sites — terrestrial_core_sites","text":"terrestrial_core_sites","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_core_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terrestrial_core_sites — terrestrial_core_sites","text":"","code":"terrestrial_core_sites()"},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_core_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"terrestrial_core_sites — terrestrial_core_sites","text":"vector listing NEON core terrestrial sites.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_core_sites.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"terrestrial_core_sites — terrestrial_core_sites","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_core_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"terrestrial_core_sites — terrestrial_core_sites","text":"","code":"terrestrial_core_sites() #>  [1] \"BONA\" \"CLBJ\" \"CPER\" \"GUAN\" \"HARV\" \"KONZ\" \"NIWO\" \"ONAQ\" \"ORNL\" \"OSBS\" #> [11] \"PUUM\" \"SCBI\" \"SJER\" \"SRER\" \"TALL\" \"TOOL\" \"UNDE\" \"WOOD\" \"WREF\" \"YELL\""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_relocatable_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","title":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","text":"terrestrial_relocatable_sites","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_relocatable_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","text":"","code":"terrestrial_relocatable_sites()"},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_relocatable_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","text":"vector listing NEON core terrestrial sites.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_relocatable_sites.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/terrestrial_relocatable_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"terrestrial_relocatable_sites — terrestrial_relocatable_sites","text":"","code":"terrestrial_relocatable_sites() #>  [1] \"ABBY\" \"BARR\" \"BART\" \"BLAN\" \"DCFS\" \"DEJU\" \"DELA\" \"DSNY\" \"GRSM\" \"HEAL\" #> [11] \"JERC\" \"JORN\" \"KONA\" \"LAJA\" \"LENO\" \"MLBS\" \"MOAB\" \"NOGP\" \"OAES\" \"RMNP\" #> [21] \"SERC\" \"SOAP\" \"STEI\" \"STER\" \"TEAK\" \"TREE\" \"UKFS\""},{"path":"https://lanl.github.io/NEONiso/reference/validate_analyte.html","id":null,"dir":"Reference","previous_headings":"","what":"validate_analyte — validate_analyte","title":"validate_analyte — validate_analyte","text":"validate_analyte","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_analyte.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate_analyte — validate_analyte","text":"","code":"validate_analyte(analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/validate_analyte.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate_analyte — validate_analyte","text":"analyte Co2 H2o?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_analyte.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate_analyte — validate_analyte","text":"Standardized string water ('H2o') carbon ('Co2') systems make sure strings standardized across package functions.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_analyte.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"validate_analyte — validate_analyte","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_output_file.html","id":null,"dir":"Reference","previous_headings":"","what":"validate_output_file — validate_output_file","title":"validate_output_file — validate_output_file","text":"validate_output_file","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_output_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"validate_output_file — validate_output_file","text":"","code":"validate_output_file(inname, outname, site, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/validate_output_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"validate_output_file — validate_output_file","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. analyte Carbon ('Co2') water ('H2o') system?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_output_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"validate_output_file — validate_output_file","text":"Nothing environment, simply checks make sure expected groups output.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/validate_output_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"validate_output_file — validate_output_file","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/water_isotope_sites.html","id":null,"dir":"Reference","previous_headings":"","what":"water_isotope_sites — water_isotope_sites","title":"water_isotope_sites — water_isotope_sites","text":"water_isotope_sites","code":""},{"path":"https://lanl.github.io/NEONiso/reference/water_isotope_sites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"water_isotope_sites — water_isotope_sites","text":"","code":"water_isotope_sites()"},{"path":"https://lanl.github.io/NEONiso/reference/water_isotope_sites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"water_isotope_sites — water_isotope_sites","text":"vector listing NEON sites measuring water vapor isotope ratios.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/water_isotope_sites.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"water_isotope_sites — water_isotope_sites","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/water_isotope_sites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"water_isotope_sites — water_isotope_sites","text":"","code":"water_isotope_sites() #>  [1] \"BONA\" \"CLBJ\" \"CPER\" \"GUAN\" \"HARV\" \"KONZ\" \"NIWO\" \"ONAQ\" \"ORNL\" \"OSBS\" #> [11] \"PUUM\" \"SCBI\" \"SJER\" \"SRER\" \"TALL\" \"TOOL\" \"UNDE\" \"WOOD\" \"WREF\" \"YELL\" #> [21] \"BARR\""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_ambient_data.html","id":null,"dir":"Reference","previous_headings":"","what":"write_carbon_ambient_data — write_carbon_ambient_data","title":"write_carbon_ambient_data — write_carbon_ambient_data","text":"Write ambient observations NEON EC towers isotope data (either H2O CO2) calibrated using package.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_ambient_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_carbon_ambient_data — write_carbon_ambient_data","text":"","code":"write_carbon_ambient_data(outname, site, amb_data_list)"},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_ambient_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_carbon_ambient_data — write_carbon_ambient_data","text":"outname Output file name. site NEON 4-letter site code. amb_data_list Calibrated list ambient data - output one calibrate_ambient_carbon* functions.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_ambient_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_carbon_ambient_data — write_carbon_ambient_data","text":"Nothing environment, writes data amb_data_list file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_ambient_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_carbon_ambient_data — write_carbon_ambient_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_calibration_data.html","id":null,"dir":"Reference","previous_headings":"","what":"write_carbon_calibration_data — write_carbon_calibration_data","title":"write_carbon_calibration_data — write_carbon_calibration_data","text":"write_carbon_calibration_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_calibration_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_carbon_calibration_data — write_carbon_calibration_data","text":"","code":"write_carbon_calibration_data(outname, site, calDf, method)"},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_calibration_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_carbon_calibration_data — write_carbon_calibration_data","text":"outname Output file name. site NEON 4-letter site code. calDf Calibration data frame - output fit_carbon_regression method Bowling et al. 2003 linear regression method used fit_carbon_regression?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_calibration_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_carbon_calibration_data — write_carbon_calibration_data","text":"Nothing environment, writes calibration parameters (e.g., gain offset regression slopes intercepts) output hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_calibration_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_carbon_calibration_data — write_carbon_calibration_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"write_carbon_reference_data — write_carbon_reference_data","title":"write_carbon_reference_data — write_carbon_reference_data","text":"write_carbon_reference_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_carbon_reference_data — write_carbon_reference_data","text":"","code":"write_carbon_reference_data(inname, outname, site, calDf)"},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_carbon_reference_data — write_carbon_reference_data","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. calDf Calibration data frame - output fit_carbon_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_carbon_reference_data — write_carbon_reference_data","text":"Nothing environment, writes calibrated reference data hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_carbon_reference_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_carbon_reference_data — write_carbon_reference_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_qfqm.html","id":null,"dir":"Reference","previous_headings":"","what":"write_qfqm — write_qfqm","title":"write_qfqm — write_qfqm","text":"Write NEON's qfqm data isotope species output file. Wraps copy_qfqm_group.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_qfqm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_qfqm — write_qfqm","text":"","code":"write_qfqm(inname, outname, site, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/write_qfqm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_qfqm — write_qfqm","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. analyte Carbon ('Co2') water ('H2o') system?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_qfqm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_qfqm — write_qfqm","text":"Nothing environment, writes qfqm data file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_qfqm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_qfqm — write_qfqm","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_ucrt.html","id":null,"dir":"Reference","previous_headings":"","what":"write_ucrt — write_ucrt","title":"write_ucrt — write_ucrt","text":"Write NEON's ucrt data isotope species output file. Wraps copy_ucrt_group.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_ucrt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_ucrt — write_ucrt","text":"","code":"write_ucrt(inname, outname, site, analyte)"},{"path":"https://lanl.github.io/NEONiso/reference/write_ucrt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_ucrt — write_ucrt","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. analyte Carbon ('Co2') water ('H2o') system?","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_ucrt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_ucrt — write_ucrt","text":"Nothing environment, writes ucrt data file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_ucrt.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_ucrt — write_ucrt","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_calibration_data.html","id":null,"dir":"Reference","previous_headings":"","what":"write_water_calibration_data — write_water_calibration_data","title":"write_water_calibration_data — write_water_calibration_data","text":"write_water_calibration_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_calibration_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_water_calibration_data — write_water_calibration_data","text":"","code":"write_water_calibration_data(outname, site, calDf)"},{"path":"https://lanl.github.io/NEONiso/reference/write_water_calibration_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_water_calibration_data — write_water_calibration_data","text":"outname Output file name. site NEON 4-letter site code. calDf Calibration data frame - output fit_water_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_calibration_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_water_calibration_data — write_water_calibration_data","text":"Nothing environment, writes calibration parameters (e.g., regression slopes intercepts) output hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_calibration_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_water_calibration_data — write_water_calibration_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_reference_data.html","id":null,"dir":"Reference","previous_headings":"","what":"write_water_reference_data — write_water_reference_data","title":"write_water_reference_data — write_water_reference_data","text":"write_water_reference_data","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_reference_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write_water_reference_data — write_water_reference_data","text":"","code":"write_water_reference_data(inname, outname, site, lowDf, medDf, highDf, calDf)"},{"path":"https://lanl.github.io/NEONiso/reference/write_water_reference_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"write_water_reference_data — write_water_reference_data","text":"inname Input file name. outname Output file name. site NEON 4-letter site code. lowDf Dataframe corresponding \"low\" reference water. medDf Data frame corresponding \"med\" reference water. highDf Data frame corresponding \"high\" reference water. calDf Calibration data frame - output fit_water_regression","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_reference_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"write_water_reference_data — write_water_reference_data","text":"Nothing environment, writes calibrated reference data hdf5 file.","code":""},{"path":"https://lanl.github.io/NEONiso/reference/write_water_reference_data.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"write_water_reference_data — write_water_reference_data","text":"Rich Fiorella rfiorella@lanl.gov","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-062","dir":"Changelog","previous_headings":"","what":"NEONiso 0.6.2","title":"NEONiso 0.6.2","text":"last release *_by_month functions! deprecated year, removed next release. Use calibrate_carbon (mature) calibrate_water (experimental). Exports get_Rstd, helper function return heavy--light isotope ratio relevant international standard. Allows use useFasttime argument dependency neonUtilities::stackEddy, neonUtilities >= 2.3.0. stackEddy(useFasttime = TRUE) ~3x faster large datasets stackEddy(useFasttime = FALSE), improves performance significantly trying work larger timeseries NEON archives. Adds new cross-validation error metrics linear regression calibration method carbon. Note metrics still considered experimental may continue change.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-061","dir":"Changelog","previous_headings":"","what":"NEONiso 0.6.1","title":"NEONiso 0.6.1","text":"CRAN release: 2022-09-22 Exports new helper function getting sites water isotopes, water_isotope_sites(). reference_corrections vignette blank previous release - updated release (#81) Makes select functions used internally consistent upcoming changes tidyselect (h/t Hadley Wickham)","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-060","dir":"Changelog","previous_headings":"","what":"NEONiso 0.6.0","title":"NEONiso 0.6.0","text":"CRAN release: 2022-08-08 experimental calibration routine water isotopes added. known issues (e.g., correction made concentration dependence analyzers yet), data produced function considered provisional. Added capability plot data used carbon calibration regression order help identify periods calibration parameters seem okay, quality calibrated data degraded. Added cross-validation error estimates carbon calibration routines. calibrate_carbon_bymonth() function marked deprecated, removed earlier version 0.7.0 end 2022. flexible calibrate_carbon() function used. bug generated non-nonsensical CO2 d13C values fixed (#72). calibrate_carbon() function now also provides calibrated values reference material measurement. useful determining calibration error one reference materials omitted calibration (e.g., generate calibration relationships high medium standards, estimate error difference calibrated measurement known reference values). Reduced number tests run CRAN minimize compute resources requested. Made function corrects mismatched reference values visible, added instances reference data needs corrected.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-053","dir":"Changelog","previous_headings":"","what":"NEONiso 0.5.3","title":"NEONiso 0.5.3","text":"CRAN release: 2022-01-03 Small maintenance release addresses NOTE CRAN.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-052","dir":"Changelog","previous_headings":"","what":"NEONiso 0.5.2","title":"NEONiso 0.5.2","text":"CRAN release: 2021-11-17 Fixes bug rhdf5 function imported properly, generating warnings errors CRAN. Updates manage_local_ec_archive avoid scenario creating duplicate files, thereby efficient drive space.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-051","dir":"Changelog","previous_headings":"","what":"NEONiso 0.5.1","title":"NEONiso 0.5.1","text":"CRAN release: 2021-08-12 update takes advantage upgrades stackEddy function neonUtilities 2.1.1, allows calibration routines run efficiently NEON’s HDF5 files. example, calibrate_carbon(), runs ~2x faster neonUtilities 2.1.1 used instead earlier versions.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-050","dir":"Changelog","previous_headings":"","what":"NEONiso 0.5.0","title":"NEONiso 0.5.0","text":"CRAN release: 2021-07-07 Adds calibrate_carbon() function, can used generate monthly output files can used bundle months data available individual site single file. long-term, calibrate_carbon() ‘workhorse’ function NEON’s carbon data, calibrate_carbon_bymonth deprecated future release.","code":""},{"path":"https://lanl.github.io/NEONiso/news/index.html","id":"neoniso-040","dir":"Changelog","previous_headings":"","what":"NEONiso 0.4.0","title":"NEONiso 0.4.0","text":"CRAN release: 2021-03-19 initial release CRAN.","code":""}]
